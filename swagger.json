{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "ReactOctopus",
    "description": "Documentation of ReactOctopus backend",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/formData"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://reactoctopus-back.onrender.com" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Board",
      "description": "Boards endpoints"
    },
    {
      "name": "Column",
      "description": "Column endpoints"
    },
    {
      "name": "Card",
      "description": "Card endpoints"
    },
    {
      "name": "Drag&Drop",
      "description": "Routes for changing position"
    },
    {
      "name": "NeedHelp",
      "description": "Need help endpoint"
    },
    {
      "name": "Images",
      "description": "Images endpoints. Available types (desctop, desctopx2, tablet, tabletx2, mobile, mobilex2)"
    }
  ],

  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "409": {
            "description": "Conflict: Email already in use.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/update-profile": {
      "patch": {
        "tags": ["Auth"],
        "operationId": "uploadFile",
        "summary": "Update user profile",
        "description": "Endpoint to update user profile information",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "User login with google",
        "parameters": [],
        "responses": {
          "301": {
            "description": "Redirect to google auth",
            "content": {}
          }
        }
      }
    },
    "/api/images/{type}": {
      "get": {
        "tags": ["Images"],
        "summary": "Get images",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/boards": {
      "get": {
        "tags": ["Board"],
        "summary": "Get all boards",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/boards/{boardId}": {
      "patch": {
        "tags": ["Board"],
        "summary": "Get board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardByIdResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/boards/post": {
      "post": {
        "tags": ["Board"],
        "summary": "Post board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Post board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/boards/patch/{boardId}": {
      "patch": {
        "tags": ["Board"],
        "summary": "Update bord on the server",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update board object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/boards/delete/{boardId}": {
      "delete": {
        "tags": ["Board"],
        "summary": "Delete board from the server",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/columns/{boardId}": {
      "get": {
        "tags": ["Column"],
        "summary": "Get all columns",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of parent board"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllColumnsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/columns/post": {
      "post": {
        "tags": ["Column"],
        "summary": "Post column",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Post column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/columns/patch/{columnId}": {
      "patch": {
        "tags": ["Column"],
        "summary": "Update column on the server",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update column object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/columns/changeIndex/{columnId}": {
      "patch": {
        "tags": ["Drag&Drop"],
        "summary": "Update column on the server",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update column object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/changeIndexColumnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/changeIndexColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/columns/delete/{columnId}": {
      "delete": {
        "tags": ["Column"],
        "summary": "Delete column from the server",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/{columnId}": {
      "get": {
        "tags": ["Card"],
        "summary": "Get all cards",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/post": {
      "post": {
        "tags": ["Card"],
        "summary": "Post card on the server",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Post card object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/patch/{cardId}": {
      "patch": {
        "tags": ["Card"],
        "summary": "Update card on the server",
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update card object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/changeIndex/{cardId}": {
      "patch": {
        "tags": ["Drag&Drop"],
        "summary": "Update card on the server",
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update card object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeIndexCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeIndexCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/move/{cardId}": {
      "patch": {
        "tags": ["Drag&Drop"],
        "summary": "Update card on the server",
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update card object at the server",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveCardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveCardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/cards/delete/{cardId}": {
      "delete": {
        "tags": ["Card"],
        "summary": "Delete cards from the server",
        "parameters": [
          {
            "in": "path",
            "name": "cardId",
            "schema": {
              "type": "string",
              "required": true,
              "description": "Id of the Item"
            }
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCardResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          },
          "404": {
            "description": "Not Found: The requested resource could not be found on the server.",
            "content": {}
          }
        }
      }
    },
    "/api/needhelp": {
      "get": {
        "tags": ["NeedHelp"],
        "summary": "Send email and message to our email",
        "parameters": [],
        "requestBody": {
          "description": "Need help object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeedHelpRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeedHelpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot process the request (invalid request body).",
            "content": {}
          },
          "401": {
            "description": "Unauthorized: Access to the requested resource is unauthorized.",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andy Machine"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "NeedHelpResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "message": {
            "type": "string",
            "description": "User message",
            "example": "Help message send"
          }
        },
        "example": {
          "message": "Help message send"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "UpdateInfoResponse": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "theme": {
            "type": "string",
            "description": "Chosed theme",
            "example": "dark"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's password",
            "example": "http://avatarpath.com/path"
          }
        },
        "example": {
          "theme": "dark",
          "name": "Andy Machine",
          "email": "user@example.com",
          "avatarURL": "http://avatarpath.com/path"
        }
      },
      "UpdateInfoRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "theme": {
            "type": "string",
            "description": "Chosed theme",
            "example": "dark"
          },
          "avatarURL": {
            "type": "file",
            "description": "User's password"
          }
        },
        "example": {
          "theme": "dark",
          "name": "Andy Machine",
          "email": "user@example.com",
          "avatarURL": "http://avatarpath.com/path"
        }
      },
      "CurrentRequest": {
        "type": "object",
        "properties": {}
      },
      "PostBoardRequest": {
        "type": "object",
        "required": ["title", "iconId", "background"],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
          "active": {
            "type": "boolean",
            "description": "active board",
            "example": false
          }
        },
        "example": {
          "title": "Project Office",
          "iconId": "1",
          "background": "https://example/images/sakura.webp",
          "active": true
        }
      },
      "PatchBoardRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
          "active": {
            "type": "boolean",
            "description": "active board",
            "example": false
          }
        },
        "example": {
          "title": "Project Office",
          "iconId": "1",
          "background": "https://example/images/sakura.webp",
          "active": false
        }
      },
      "PostColumnRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "boardId": {
            "type": "string",
            "description": "Parent board Id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "title": "Project Office",
          "boardId": "6631f3841c36049d76cf1ac3"
        }
      },
      "PatchColumnRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          }
        },
        "example": {
          "title": "Project Office"
        }
      },
      "changeIndexColumnRequest": {
        "type": "object",
        "required": ["destinationIndex", "boardId"],
        "properties": {
          "destinationIndex": {
            "type": "number",
            "description": "Destination index",
            "example": 0
          },
          "boardId": {
            "type": "string",
            "description": "Destination index",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "destinationIndex": 1,
          "boardId": "6631f3841c36049d76cf1ac3"
        }
      },
      "PostCardRequest": {
        "type": "object",
        "required": ["title", "description", "priority", "deadline"],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design."
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          },
          "columnId": {
            "type": "string",
            "description": "Parent column Id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "title": "The Watch Spot Design",
          "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
          "priority": "low",
          "columnId": "6631f3841c36049d76cf1ac3",
          "deadline": "2024-05-04T17:42:30.636+00:00"
        }
      },
      "PatchCardRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "description": {
            "type": "string",
            "description": "Task description",
            "example": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design."
          },
          "priority": {
            "type": "string",
            "description": "Level of priority",
            "example": "medium"
          },
          "columnId": {
            "type": "string",
            "description": "Id of pearent column",
            "example": "6631f3841c36049d76cf1ac3"
          },
          "deadline": {
            "type": "string",
            "description": "Task dealine",
            "example": "2024-05-04T17:42:30.636+00:00"
          }
        },
        "example": {
          "title": "The Watch Spot Design",
          "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
          "priority": "low",
          "columnId": "6631f3841c36049d76cf1ac3",
          "deadline": "2024-05-04T17:42:30.636+00:00"
        }
      },
      "ChangeIndexCardRequest": {
        "type": "object",
        "required": ["destinationIndex", "destinationColumnId"],
        "properties": {
          "destinationIndex": {
            "type": "number",
            "description": "Destination index",
            "example": 0
          },
          "destinationColumnId": {
            "type": "string",
            "description": "Destination index",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "destinationIndex": 1,
          "destinationColumnId": "6631f3841c36049d76cf1ac3"
        }
      },
      "MoveCardRequest": {
        "type": "object",
        "required": ["destinationIndex", "destinationColumnId"],
        "properties": {
          "destinationIndex": {
            "type": "number",
            "description": "Destination index",
            "example": 0
          },
          "destinationColumnId": {
            "type": "string",
            "description": "Destination index",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "destinationIndex": 1,
          "destinationColumnId": "6631f3841c36049d76cf1ac3"
        }
      },
      "NeedHelpRequest": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "message": {
            "type": "string",
            "description": "User message",
            "example": "Some text im message"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Andy Machine"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": ""
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFmMzg0MWMzNjA0OWQ3NmNmMWFjMyIsImlhdCI6MTcxNDU0OTYzNiwiZXhwIjoxNzE0NTUzMjM2fQ._bvC8euAfl_oehYuN8q7Ymtgc3T6Y3VpfYSFrJWgp_k"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDFkMzFlMmExM2Y3OTg4ZTA5MTllNSIsImlhdCI6MTcxNTU4OTkxOCwiZXhwIjoxNzE1NjcyNzE4fQ.h_Y2CEPt7mQkTRDEdMmb9K5tL5u8vWoaKIfAPCmHM58",
          "user": {
            "theme": "dark",
            "name": "An Machine",
            "email": "ur@example.com",
            "avatarURL": ""
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "theme": {
              "type": "string",
              "description": "User's theme",
              "example": "dark"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Andy Machine"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "avatarURL": {
              "type": "string",
              "description": "User's avatar",
              "example": ""
            }
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2MzFmMzg0MWMzNjA0OWQ3NmNmMWFjMyIsImlhdCI6MTcxNDU0OTYzNiwiZXhwIjoxNzE0NTUzMjM2fQ._bvC8euAfl_oehYuN8q7Ymtgc3T6Y3VpfYSFrJWgp_k"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDFkMzFlMmExM2Y3OTg4ZTA5MTllNSIsImlhdCI6MTcxNTU4OTkxOCwiZXhwIjoxNzE1NjcyNzE4fQ.h_Y2CEPt7mQkTRDEdMmb9K5tL5u8vWoaKIfAPCmHM58",
          "user": {
            "theme": "dark",
            "name": "An Machine",
            "email": "ur@example.com",
            "avatarURL": ""
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "6631f3841c36049d76cf1ac3"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Andy Machine"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "start": {
            "type": "date",
            "description": "User's token",
            "example": "2024-05-01T07:47:16.688+00:00"
          }
        }
      },
      "ImagesResponse": {
        "type": "object",
        "properties": {
          "imageUrls": {}
        },
        "example": {
          "imageUrls": [
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575613/react-octopus/route/e5l6os2xwkgtjmbkfuw6.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575614/react-octopus/route/heujomhkyiaavuoxqmiq.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1712575673/react-octopus/route/ikztmic75cfgbdhfuc1f.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v17145123676/react-octopus/route/jsufvhlek6tdavzdmzvg.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575672/react-octopus/route/maopjnd6scj7z2wtcdog.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575673/react-octopus/route/muucbrq8v7kvywvio0jp.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575975/react-octopus/route/nrzdwyqz0x3phynrvqmp.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1711575876/react-octopus/route/pslkjxuhaxworen7rdyj.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714571676/react-octopus/route/qgyeiqmm9zhlogcen0mj.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1711575623/react-octopus/route/t6vngzugp6qjakub1q0g.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575670/react-octopus/route/u9mmiv1ypl7b3yg9ka52.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575671/react-octopus/route/voiztzwnhjrvsdl7shsn.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1712575672/react-octopus/route/wympusczafztc5bg7kaz.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575673/react-octopus/route/yszsmlifjvpnpcwzxkul.webp",
            "http://res.cloudinary.com/dnqperiuu/image/upload/v1714575674/react-octopus/route/z7z9sfi0e3iuiqlzgjdn.webp"
          ]
        }
      },
      "GetAllBoardsResponse": {
        "type": "array",
        "items": {
          "result": {
            "type": "object",
            "required": [
              "title",
              "background",
              "iconId",
              "owner",
              "_id",
              "columns"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "User boards",
                "example": "Neon Light Project"
              },
              "background": {
                "type": "string",
                "description": "Background image url",
                "example": "https://example/images/sakura.webp"
              },
              "iconId": {
                "type": "string",
                "description": "Board icon id",
                "example": "2"
              },
              "owner": {
                "type": "object",
                "discription": "owner of board",
                "example": {
                  "_id": {
                    "type": "string",
                    "description": "owner id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "email": {
                    "type": "string",
                    "description": "owner id",
                    "format": "email"
                  }
                }
              },
              "columns": {
                "type": "array",
                "required": [
                  "title",
                  "background",
                  "iconId",
                  "owner",
                  "_id",
                  "cards"
                ],
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Board Column Title",
                      "example": "Column-1"
                    },
                    "boardId": {
                      "type": "string",
                      "description": "Parent board Id",
                      "example": "6631f3841c36049d76cf1ac3"
                    },
                    "owner": {
                      "type": "object",
                      "discription": "Board Id",
                      "example": {
                        "_id": {
                          "type": "string",
                          "description": "Board id",
                          "example": "6631f3841c36049d76cf1ac3"
                        }
                      }
                    },

                    "cards": {
                      "type": "array",
                      "description": "Array of cards",
                      "items": {
                        "type": "object",
                        "description": "card",
                        "items": {
                          "title": {
                            "type": "string",
                            "description": "Task title",
                            "example": "Title-1"
                          },
                          "description": {
                            "type": "string",
                            "description": "Task description",
                            "example": "Description-1"
                          },
                          "priority": {
                            "type": "string",
                            "description": "Level of priority",
                            "example": "medium"
                          },
                          "deadline": {
                            "type": "string",
                            "description": "Task dealine",
                            "example": "2024-05-04T17:42:30.636+00:00"
                          },
                          "columnId": {
                            "type": "string",
                            "description": "Parent column Id",
                            "example": "6631f3841c36049d76cf1ac3"
                          },
                          "owner": {
                            "type": "object",
                            "discription": "User Id",
                            "example": {
                              "_id": {
                                "type": "string",
                                "description": "Board id",
                                "example": "6631f3841c36049d76cf1ac3"
                              }
                            }
                          },
                          "_id": {
                            "type": "string",
                            "description": "board id",
                            "example": "6631f3841c36049d76cf1ac3"
                          }
                        }
                      },
                      "example": [
                        {
                          "title": "Column-1",
                          "description": "Description-1",
                          "priority": "medium",
                          "deadline": "2024-05-04T17:42:30.636+00:00",
                          "columnId": "6631f3841c36049d76cf1ac3",
                          "owner": {
                            "_id": "6631f3841c36049d76cf1ac3"
                          }
                        }
                      ]
                    },
                    "_id": {
                      "type": "string",
                      "description": "board id",
                      "example": "6631f3841c36049d76cf1ac3"
                    }
                  }
                }
              },
              "_id": {
                "type": "string",
                "description": "board id",
                "example": "6631f3841c36049d76cf1ac3"
              }
            }
          },
          "total": {
            "type": "number",
            "description": "Number of items in array",
            "example": 1
          }
        },
        "example": [
          {
            "result": {
              "_id": "6631f3841c36049d76cf1ac3",
              "title": "Project Office",
              "iconId": "1",
              "background": "https://example/images/nightSky.webp",
              "columns": [
                {
                  "title": "Column-1",
                  "boardId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3",
                    "email": "example@ex.com"
                  },

                  "cards": [
                    {
                      "title": "Title-1",
                      "description": "Description-1",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    {
                      "title": "Title-2",
                      "description": "Description-2",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    {
                      "title": "Title-3",
                      "description": "Description-3",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    }
                  ]
                },
                {
                  "title": "Column-2",
                  "boardId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3",
                    "email": "example@ex.com"
                  },

                  "cards": [
                    {
                      "title": "Title-4",
                      "description": "Description-4",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    {
                      "title": "Title-5",
                      "description": "Description-5",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    {
                      "title": "Title-6",
                      "description": "Description-6",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3",
                        "email": "example@ex.com"
                      },
                      "_id": "6631f3841c36049d76cf1ac3"
                    }
                  ]
                }
              ],
              "owner": {
                "_id": "6631f3141c36049126cf1ac",
                "email": "example@ex.com"
              }
            },
            "total": 1
          }
        ]
      },
      "GetBoardByIdResponse": {
        "type": "object",
        "required": [
          "title",
          "background",
          "iconId",
          "owner",
          "_id",
          "columns"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
          "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "active": {
            "type": "boolean",
            "description": "active board",
            "example": true
          },
          "owner": {
            "type": "object",
            "discription": "owner of board",
            "example": {
              "_id": {
                "type": "string",
                "description": "owner id",
                "example": "6631f3841c36049d76cf1ac3"
              },
              "email": {
                "type": "string",
                "description": "owner id",
                "format": "email"
              }
            }
          },
          "columns": {
            "type": "array",
            "required": [
              "title",
              "background",
              "iconId",
              "owner",
              "_id",
              "cards"
            ],
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Board Column Title",
                  "example": "Column-1"
                },
                "boardId": {
                  "type": "string",
                  "description": "Parent board Id",
                  "example": "6631f3841c36049d76cf1ac3"
                },
                "owner": {
                  "type": "object",
                  "discription": "Board Id",
                  "example": {
                    "_id": {
                      "type": "string",
                      "description": "Board id",
                      "example": "6631f3841c36049d76cf1ac3"
                    }
                  }
                },

                "cards": {
                  "type": "array",
                  "description": "Array of cards",
                  "items": {
                    "type": "object",
                    "description": "card",
                    "items": {
                      "title": {
                        "type": "string",
                        "description": "Task title",
                        "example": "Title-1"
                      },
                      "description": {
                        "type": "string",
                        "description": "Task description",
                        "example": "Description-1"
                      },
                      "priority": {
                        "type": "string",
                        "description": "Level of priority",
                        "example": "medium"
                      },
                      "deadline": {
                        "type": "string",
                        "description": "Task dealine",
                        "example": "2024-05-04T17:42:30.636+00:00"
                      },
                      "columnId": {
                        "type": "string",
                        "description": "Parent column Id",
                        "example": "6631f3841c36049d76cf1ac3"
                      },
                      "owner": {
                        "type": "object",
                        "discription": "User Id",
                        "example": {
                          "_id": {
                            "type": "string",
                            "description": "Board id",
                            "example": "6631f3841c36049d76cf1ac3"
                          }
                        }
                      },
                      "_id": {
                        "type": "string",
                        "description": "board id",
                        "example": "6631f3841c36049d76cf1ac3"
                      }
                    }
                  },
                  "example": [
                    {
                      "title": "Column-1",
                      "description": "Description-1",
                      "priority": "medium",
                      "deadline": "2024-05-04T17:42:30.636+00:00",
                      "columnId": "6631f3841c36049d76cf1ac3",
                      "owner": {
                        "_id": "6631f3841c36049d76cf1ac3"
                      }
                    }
                  ]
                },
                "_id": {
                  "type": "string",
                  "description": "board id",
                  "example": "6631f3841c36049d76cf1ac3"
                }
              }
            }
          },
          "_id": {
            "type": "string",
            "description": "board id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "_id": "6631f3841c36049d76cf1ac3",
          "title": "Project Office",
          "iconId": "1",
          "background": "https://example/images/nightSky.webp",
          "owner": {
            "_id": "6631f3141c36049126cf1ac",
            "email": "example@ex.com"
          },
          "active": true,
          "columns": [
            {
              "title": "Column-1",
              "boardId": "6631f3841c36049d76cf1ac3",
              "owner": {
                "_id": "6631f3841c36049d76cf1ac3",
                "email": "example@ex.com"
              },
              "cards": [
                {
                  "title": "Title-1",
                  "description": "Description-1",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                },
                {
                  "title": "Title-2",
                  "description": "Description-2",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                },
                {
                  "title": "Title-3",
                  "description": "Description-3",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                }
              ]
            },
            {
              "title": "Column-2",
              "boardId": "6631f3841c36049d76cf1ac3",
              "owner": {
                "_id": "6631f3841c36049d76cf1ac3"
              },

              "cards": [
                {
                  "title": "Title-4",
                  "description": "Description-4",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                },
                {
                  "title": "Title-5",
                  "description": "Description-5",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                },
                {
                  "title": "Title-6",
                  "description": "Description-6",
                  "priority": "medium",
                  "deadline": "2024-05-04T17:42:30.636+00:00",
                  "columnId": "6631f3841c36049d76cf1ac3",
                  "owner": {
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": "6631f3841c36049d76cf1ac3"
                }
              ]
            }
          ]
        }
      },
      "PostBoardResponse": {
        "type": "object",
        "required": ["title", "background", "iconId", "owner", "_id"],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
          "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "columns": [],
          "owner": {
            "type": "string",
            "discription": "owner of board",
            "example": "6631f3841c36049d76cf1ac3"
          },
          "_id": {
            "type": "string",
            "description": "board id",
            "example": "6631f3841c36049d76cf1ac3"
          },
          "active": {
            "type": "boolean",
            "description": "active board",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "description": "Time created at",
            "example": "2024-05-14T20:33:07.268Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time updated at",
            "example": "2024-05-14T20:33:07.268Z"
          }
        },
        "example": {
          "title": "Project Office",
          "iconId": "1",
          "background": "https://example/images/nightSky.webp",
          "owner": "6631f3141c36049126cf1ac",
          "columns": [],
          "_id": "6631f3841c36049d76cf1ac3",
          "active": true,
          "createdAt": "2024-05-14T20:33:07.268Z",
          "updatedAt": "2024-05-14T20:33:07.268Z"
        }
      },
      "PatchBoardResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "User boards",
            "example": "Neon Light Project"
          },
          "background": {
            "type": "string",
            "description": "Background image url",
            "example": "https://example/images/sakura.webp"
          },
          "iconId": {
            "type": "string",
            "description": "Board icon id",
            "example": "2"
          },
          "owner": {
            "type": "object",
            "discription": "owner of board",
            "example": {
              "_id": {
                "type": "string",
                "description": "owner id",
                "example": "6631f3841c36049d76cf1ac3"
              },
              "email": {
                "type": "string",
                "description": "owner email",
                "format": "email"
              }
            }
          },
          "active": {
            "type": "boolean",
            "description": "active board",
            "example": false
          },
          "createdAt": {
            "type": "string",
            "description": "Time created at",
            "example": "2024-05-14T20:33:07.268Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Time updated at",
            "example": "2024-05-14T20:33:07.268Z"
          },
          "_id": {
            "type": "string",
            "description": "board id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": {
          "_id": "6631f3841c36049d76cf1ac3",
          "title": "Project Office",
          "iconId": "1",
          "background": "https://example/images/nightSky.webp",
          "owner": {
            "_id": "6631f3141c36049126cf1ac",
            "email": "example@ex.com"
          },
          "columns": ["..."],
          "active": false,
          "createdAt": "2024-05-14T20:23:24.388Z",
          "updatedAt": "2024-05-14T21:06:15.288Z"
        }
      },
      "DeleteBoardResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "board id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": "6631f3841c36049d76cf1ac3"
      },

      "GetAllColumnsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "boardId"],
          "properties": {
            "result": {
              "type": "array",
              "description": "result of request",
              "items": {
                "type": "object",
                "description": "columns",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Board Column Title",
                    "example": "Title-1"
                  },
                  "boardId": {
                    "type": "string",
                    "description": "Parent board Id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "owner": {
                    "type": "object",
                    "discription": "Board Id",
                    "example": {
                      "_id": {
                        "type": "string",
                        "description": "Board id",
                        "example": "6631f3841c36049d76cf1ac3"
                      }
                    }
                  },

                  "cards": {
                    "type": "array",
                    "description": "Array of cards",
                    "items": {
                      "type": "object",
                      "description": "card",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Task title",
                          "example": "Title-1"
                        },
                        "description": {
                          "type": "string",
                          "description": "Task description",
                          "example": "Description-1"
                        },
                        "priority": {
                          "type": "string",
                          "description": "Level of priority",
                          "example": "medium"
                        },
                        "deadline": {
                          "type": "string",
                          "description": "Task dealine",
                          "example": "2024-05-04T17:42:30.636+00:00"
                        },
                        "columnId": {
                          "type": "string",
                          "description": "Parent column Id",
                          "example": "6631f3841c36049d76cf1ac3"
                        },
                        "owner": {
                          "type": "object",
                          "discription": "User Id",
                          "example": {
                            "_id": {
                              "type": "string",
                              "description": "Board id",
                              "example": "6631f3841c36049d76cf1ac3"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "board id",
                          "example": "6631f3841c36049d76cf1ac3"
                        }
                      }
                    },
                    "example": [
                      {
                        "title": "Title-1",
                        "description": "Description-1",
                        "priority": "medium",
                        "deadline": "2024-05-04T17:42:30.636+00:00",
                        "columnId": "6631f3841c36049d76cf1ac3",
                        "owner": {
                          "_id": "6631f3841c36049d76cf1ac3"
                        }
                      }
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "description": "board id",
                    "example": "6631f3841c36049d76cf1ac3"
                  }
                }
              }
            },
            "total": {
              "type": "number",
              "description": "number of items in array",
              "example": 4
            }
          }
        },
        "example": [
          {
            "result": [
              {
                "_id": "6631f3841c36049d76cf1ac3",
                "title": "Project Office",
                "boardId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f3141c36049126cf1ac"
                },
                "cards": ["..."]
              },
              {
                "_id": "6631f3841c36049d76cf1ac3",
                "title": "Project Office",
                "boardId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f3141c36049126cf1ac"
                },
                "cards": ["..."]
              },
              {
                "_id": "6631f3841c36049d76cf1ac3",
                "title": "Project Office",
                "boardId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f3141c36049126cf1ac"
                },
                "cards": ["..."]
              }
            ],
            "total": 3
          }
        ]
      },
      "PostColumnResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "boardId"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Board Column Title",
              "example": "Title-1"
            },
            "owner": {
              "type": "string",
              "discription": "Board Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "boardId": {
              "type": "string",
              "description": "Parent board Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "title": "Project Office",
          "boardId": "6643c89fc3513c56041a4035",
          "owner": "6643c7f8afd695b09180fb82",
          "cards": [],
          "_id": "6643d37128500f1d7d87b0bc",
          "createdAt": "2024-05-14T21:11:13.172Z",
          "updatedAt": "2024-05-14T21:11:13.172Z"
        }
      },
      "PatchColumnResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "boardId"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Board Column Title",
              "example": "Title-1"
            },
            "boardId": {
              "type": "string",
              "description": "Parent board Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "owner": {
              "type": "object",
              "discription": "Board Id",
              "example": {
                "_id": {
                  "type": "string",
                  "description": "Board id",
                  "example": "6631f3841c36049d76cf1ac3"
                }
              }
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "_id": "6643d37128500f1d7d87b0bc",
          "title": "Project Officeeeeeeeee",
          "boardId": "6643c89fc3513c56041a4035",
          "owner": "6643c7f8afd695b09180fb82",
          "cards": [],
          "createdAt": "2024-05-14T21:11:13.172Z",
          "updatedAt": "2024-05-14T21:30:02.106Z"
        }
      },
      "changeIndexColumnResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "title",
            "background",
            "iconId",
            "owner",
            "_id",
            "columns"
          ],
          "properties": {
            "title": {
              "type": "string",
              "description": "User boards",
              "example": "Neon Light Project"
            },
            "background": {
              "type": "string",
              "description": "Background image url",
              "example": "https://example/images/sakura.webp"
            },
            "iconId": {
              "type": "string",
              "description": "Board icon id",
              "example": "2"
            },
            "active": {
              "type": "boolean",
              "description": "active board",
              "example": true
            },
            "owner": {
              "type": "object",
              "discription": "owner of board",
              "example": {
                "_id": {
                  "type": "string",
                  "description": "owner id",
                  "example": "6631f3841c36049d76cf1ac3"
                },
                "email": {
                  "type": "string",
                  "description": "owner id",
                  "format": "email"
                }
              }
            },
            "columns": {
              "type": "array",
              "required": [
                "title",
                "background",
                "iconId",
                "owner",
                "_id",
                "cards"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Board Column Title",
                    "example": "Column-1"
                  },
                  "boardId": {
                    "type": "string",
                    "description": "Parent board Id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "owner": {
                    "type": "object",
                    "discription": "Board Id",
                    "example": {
                      "_id": {
                        "type": "string",
                        "description": "Board id",
                        "example": "6631f3841c36049d76cf1ac3"
                      }
                    }
                  },

                  "cards": {
                    "type": "array",
                    "description": "Array of cards",
                    "items": {
                      "type": "object",
                      "description": "card",
                      "items": {
                        "title": {
                          "type": "string",
                          "description": "Task title",
                          "example": "Title-1"
                        },
                        "description": {
                          "type": "string",
                          "description": "Task description",
                          "example": "Description-1"
                        },
                        "priority": {
                          "type": "string",
                          "description": "Level of priority",
                          "example": "medium"
                        },
                        "deadline": {
                          "type": "string",
                          "description": "Task dealine",
                          "example": "2024-05-04T17:42:30.636+00:00"
                        },
                        "columnId": {
                          "type": "string",
                          "description": "Parent column Id",
                          "example": "6631f3841c36049d76cf1ac3"
                        },
                        "owner": {
                          "type": "object",
                          "discription": "User Id",
                          "example": {
                            "_id": {
                              "type": "string",
                              "description": "Board id",
                              "example": "6631f3841c36049d76cf1ac3"
                            }
                          }
                        },
                        "_id": {
                          "type": "string",
                          "description": "board id",
                          "example": "6631f3841c36049d76cf1ac3"
                        }
                      }
                    },
                    "example": [
                      {
                        "title": "Column-1",
                        "description": "Description-1",
                        "priority": "medium",
                        "deadline": "2024-05-04T17:42:30.636+00:00",
                        "columnId": "6631f3841c36049d76cf1ac3",
                        "owner": {
                          "_id": "6631f3841c36049d76cf1ac3"
                        }
                      }
                    ]
                  },
                  "_id": {
                    "type": "string",
                    "description": "board id",
                    "example": "6631f3841c36049d76cf1ac3"
                  }
                }
              }
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            }
          },
          "example": {
            "_id": "6631f3841c36049d76cf1ac3",
            "title": "Project Office",
            "iconId": "1",
            "background": "https://example/images/nightSky.webp",
            "owner": {
              "_id": "6631f3141c36049126cf1ac",
              "email": "example@ex.com"
            },
            "active": true,
            "columns": [
              {
                "title": "Column-1",
                "boardId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f3841c36049d76cf1ac3",
                  "email": "example@ex.com"
                },
                "cards": [
                  {
                    "title": "Title-1",
                    "description": "Description-1",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  {
                    "title": "Title-2",
                    "description": "Description-2",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  {
                    "title": "Title-3",
                    "description": "Description-3",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  }
                ]
              },
              {
                "title": "Column-2",
                "boardId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f3841c36049d76cf1ac3"
                },

                "cards": [
                  {
                    "title": "Title-4",
                    "description": "Description-4",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  {
                    "title": "Title-5",
                    "description": "Description-5",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  },
                  {
                    "title": "Title-6",
                    "description": "Description-6",
                    "priority": "medium",
                    "deadline": "2024-05-04T17:42:30.636+00:00",
                    "columnId": "6631f3841c36049d76cf1ac3",
                    "owner": {
                      "_id": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": "6631f3841c36049d76cf1ac3"
                  }
                ]
              }
            ]
          }
        }
      },
      "DeleteColumnResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "column id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": "6631f3841c36049d76cf1ac3"
      },
      "GetAllCardsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "columnId"],
          "properties": {
            "result": {
              "type": "array",
              "description": "array of cards",
              "items": {
                "type": "object",
                "description": "card",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Title-1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Task description",
                    "example": "Description-1"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Level of priority",
                    "example": "medium"
                  },
                  "deadline": {
                    "type": "string",
                    "description": "Task dealine",
                    "example": "2024-05-04T17:42:30.636+00:00"
                  },
                  "columnId": {
                    "type": "string",
                    "description": "Parent column Id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "owner": {
                    "type": "object",
                    "discription": "User Id",
                    "example": {
                      "_id": {
                        "type": "string",
                        "description": "Board id",
                        "example": "6631f3841c36049d76cf1ac3"
                      }
                    }
                  },
                  "_id": {
                    "type": "string",
                    "description": "board id",
                    "example": "6631f3841c36049d76cf1ac3"
                  }
                },
                "total": {
                  "type": "number",
                  "description": "number of items in array",
                  "example": 3
                }
              }
            }
          }
        },
        "example": [
          {
            "result": [
              {
                "_id": "6631f31411c3604119126cf1ac",
                "title": "The Watch Spot Design",
                "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
                "priority": "low",
                "deadline": "2024-05-04T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              },
              {
                "_id": "66311f3141c31316049126cfffc",
                "title": "Research and Analysis",
                "description": "Conduct in-depth research and analysis on the project's topic, gather relevant data, and identify key insights to inform decision-making and project planning.",
                "priority": "medium",
                "deadline": "2024-05-05T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              },
              {
                "_id": "6631f3141c31312316049126cf34c",
                "title": "Concept Development",
                "description": "Brainstorm and develop creative concepts and ideas that align with the project's objectives, considering factors such as target audience, messaging, and visual representation.",
                "priority": "without",
                "deadline": "2024-05-06T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              }
            ],
            "total": 3
          }
        ]
      },
      "PostCardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "columnId"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Task title",
              "example": "Title-1"
            },
            "description": {
              "type": "string",
              "description": "Task description",
              "example": "Description-1"
            },
            "priority": {
              "type": "string",
              "description": "Level of priority",
              "example": "medium"
            },
            "deadline": {
              "type": "string",
              "description": "Task dealine",
              "example": "2024-05-04T17:42:30.636+00:00"
            },
            "owner": {
              "type": "object",
              "discription": "User Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "columnId": {
              "type": "string",
              "description": "Parent column Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "title": "The Watch Spot Design",
          "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
          "priority": "low",
          "deadline": "2024-05-04T17:42:30.636+00:00",
          "columnId": "6631f3841c36049d76cf1ac3",
          "owner": "6643c7f8afd695b09180fb82",
          "_id": "6643d8a9f364670ba1b93a6b",
          "createdAt": "2024-05-14T21:33:29.664Z",
          "updatedAt": "2024-05-14T21:33:29.664Z"
        }
      },
      "PatchCardResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "required": ["title", "owner", "_id", "columnId"],
          "properties": {
            "title": {
              "type": "string",
              "description": "Task title",
              "example": "Title-1"
            },
            "description": {
              "type": "string",
              "description": "Task description",
              "example": "Description-1"
            },
            "priority": {
              "type": "string",
              "description": "Level of priority",
              "example": "medium"
            },
            "deadline": {
              "type": "string",
              "description": "Task dealine",
              "example": "2024-05-04T17:42:30.636+00:00"
            },
            "columnId": {
              "type": "string",
              "description": "Parent column Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "owner": {
              "type": "object",
              "discription": "User Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "_id": "6643d8a9f364670ba1b93a6b",
          "title": "The Wat",
          "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern",
          "priority": "low",
          "deadline": "2024-05-04T17:42:30.636+00:00",
          "columnId": "6631f3841c36049d76cf1ac3",
          "owner": "6643c7f8afd695b09180fb82",
          "createdAt": "2024-05-14T21:33:29.664Z",
          "updatedAt": "2024-05-14T21:37:52.847Z"
        }
      },
      "ChangeIndexCardResponse": {
        "type": "object",
        "required": [
          "title",
          "owner",
          "_id",
          "boardId",
          "cards",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board Column Title",
            "example": "Title-1"
          },
          "boardId": {
            "type": "string",
            "description": "Parent board Id",
            "example": "6631f3841c36049d76cf1ac3"
          },
          "owner": {
            "type": "object",
            "discription": "Board Id",
            "example": {
              "_id": {
                "type": "string",
                "description": "Board id",
                "example": "6631f3841c36049d76cf1ac3"
              }
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "_id": "6643d37128500f1d7d87b0bc",
          "title": "Project Office",
          "boardId": "6643c89fc3513c56041a4035",
          "owner": "6643c7f8afd695b09180fb82",
          "cards": [
            {
              "_id": "6631f31411c3604119126cf1ac",
              "title": "The Watch Spot Design",
              "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
              "priority": "low",
              "deadline": "2024-05-04T17:42:30.636+00:00",
              "columnId": "6631f3841c36049d76cf1ac3",
              "owner": {
                "_id": "6631f13141c316049126cf1ac"
              }
            },
            {
              "_id": "66311f3141c31316049126cfffc",
              "title": "Research and Analysis",
              "description": "Conduct in-depth research and analysis on the project's topic, gather relevant data, and identify key insights to inform decision-making and project planning.",
              "priority": "medium",
              "deadline": "2024-05-05T17:42:30.636+00:00",
              "columnId": "6631f3841c36049d76cf1ac3",
              "owner": {
                "_id": "6631f13141c316049126cf1ac"
              }
            },
            {
              "_id": "6631f3141c31312316049126cf34c",
              "title": "Concept Development",
              "description": "Brainstorm and develop creative concepts and ideas that align with the project's objectives, considering factors such as target audience, messaging, and visual representation.",
              "priority": "without",
              "deadline": "2024-05-06T17:42:30.636+00:00",
              "columnId": "6631f3841c36049d76cf1ac3",
              "owner": {
                "_id": "6631f13141c316049126cf1ac"
              }
            }
          ],
          "createdAt": "2024-05-14T21:11:13.172Z",
          "updatedAt": "2024-05-14T21:30:02.106Z"
        }
      },
      "MoveCardResponse": {
        "type": "object",
        "required": ["sourceColumn", "destinationColumn"],
        "properties": {
          "sourceColumn": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "description": "Board Column Title",
                "example": "Title-1"
              },
              "boardId": {
                "type": "string",
                "description": "Parent board Id",
                "example": "6631f3841c36049d76cf1ac3"
              },
              "cards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Task title",
                      "example": "Title-1"
                    },
                    "description": {
                      "type": "string",
                      "description": "Task description",
                      "example": "Description-1"
                    },
                    "priority": {
                      "type": "string",
                      "description": "Level of priority",
                      "example": "medium"
                    },
                    "deadline": {
                      "type": "string",
                      "description": "Task dealine",
                      "example": "2024-05-04T17:42:30.636+00:00"
                    },
                    "columnId": {
                      "type": "string",
                      "description": "Parent column Id",
                      "example": "6631f3841c36049d76cf1ac3"
                    },
                    "owner": {
                      "type": "object",
                      "discription": "User Id",
                      "example": "6631f3841c36049d76cf1ac3"
                    },
                    "_id": {
                      "type": "string",
                      "description": "board id",
                      "example": "6631f3841c36049d76cf1ac3"
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "Time created at",
                      "example": "2024-05-14T20:33:07.268Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "description": "Time updated at",
                      "example": "2024-05-14T20:33:07.268Z"
                    }
                  }
                }
              },
              "owner": {
                "type": "object",
                "discription": "Board Id",
                "example": {
                  "_id": {
                    "type": "string",
                    "description": "Board id",
                    "example": "6631f3841c36049d76cf1ac3"
                  }
                },
                "_id": {
                  "type": "string",
                  "description": "board id",
                  "example": "6631f3841c36049d76cf1ac3"
                },
                "createdAt": {
                  "type": "string",
                  "description": "Time created at",
                  "example": "2024-05-14T20:33:07.268Z"
                },
                "updatedAt": {
                  "type": "string",
                  "description": "Time updated at",
                  "example": "2024-05-14T20:33:07.268Z"
                }
              },
              "_id": {
                "type": "string",
                "description": "board id",
                "example": "6631f3841c36049d76cf1ac3"
              },
              "createdAt": {
                "type": "string",
                "description": "Time created at",
                "example": "2024-05-14T20:33:07.268Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time updated at",
                "example": "2024-05-14T20:33:07.268Z"
              }
            }
          },
          "destinationColumn": {
            "title": {
              "type": "string",
              "description": "Board Column Title",
              "example": "Title-1"
            },
            "boardId": {
              "type": "string",
              "description": "Parent board Id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "cards": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Title-1"
                  },
                  "description": {
                    "type": "string",
                    "description": "Task description",
                    "example": "Description-1"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Level of priority",
                    "example": "medium"
                  },
                  "deadline": {
                    "type": "string",
                    "description": "Task dealine",
                    "example": "2024-05-04T17:42:30.636+00:00"
                  },
                  "columnId": {
                    "type": "string",
                    "description": "Parent column Id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "owner": {
                    "type": "object",
                    "discription": "User Id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "_id": {
                    "type": "string",
                    "description": "board id",
                    "example": "6631f3841c36049d76cf1ac3"
                  },
                  "createdAt": {
                    "type": "string",
                    "description": "Time created at",
                    "example": "2024-05-14T20:33:07.268Z"
                  },
                  "updatedAt": {
                    "type": "string",
                    "description": "Time updated at",
                    "example": "2024-05-14T20:33:07.268Z"
                  }
                }
              }
            },
            "owner": {
              "type": "object",
              "discription": "Board Id",
              "example": {
                "_id": {
                  "type": "string",
                  "description": "Board id",
                  "example": "6631f3841c36049d76cf1ac3"
                }
              },
              "_id": {
                "type": "string",
                "description": "board id",
                "example": "6631f3841c36049d76cf1ac3"
              },
              "createdAt": {
                "type": "string",
                "description": "Time created at",
                "example": "2024-05-14T20:33:07.268Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Time updated at",
                "example": "2024-05-14T20:33:07.268Z"
              }
            },
            "_id": {
              "type": "string",
              "description": "board id",
              "example": "6631f3841c36049d76cf1ac3"
            },
            "createdAt": {
              "type": "string",
              "description": "Time created at",
              "example": "2024-05-14T20:33:07.268Z"
            },
            "updatedAt": {
              "type": "string",
              "description": "Time updated at",
              "example": "2024-05-14T20:33:07.268Z"
            }
          }
        },
        "example": {
          "sourceColumn": {
            "_id": "6643d37128500f1d7d87b0bc",
            "title": "Project Office",
            "boardId": "6643c89fc3513c56041a4035",
            "owner": "6643c7f8afd695b09180fb82",
            "cards": [
              {
                "_id": "66311f3141c31316049126cfffc",
                "title": "Research and Analysis",
                "description": "Conduct in-depth research and analysis on the project's topic, gather relevant data, and identify key insights to inform decision-making and project planning.",
                "priority": "medium",
                "deadline": "2024-05-05T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              },
              {
                "_id": "6631f3141c31312316049126cf34c",
                "title": "Concept Development",
                "description": "Brainstorm and develop creative concepts and ideas that align with the project's objectives, considering factors such as target audience, messaging, and visual representation.",
                "priority": "without",
                "deadline": "2024-05-06T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              }
            ],
            "createdAt": "2024-05-14T21:11:13.172Z",
            "updatedAt": "2024-05-14T21:30:02.106Z"
          },
          "destinationColumn": {
            "_id": "6643d37128500f1d7d87b0bc",
            "title": "Project Office",
            "boardId": "6643c89fc3513c56041a4035",
            "owner": "6643c7f8afd695b09180fb82",
            "cards": [
              {
                "_id": "6631f31411c3604119126cf1ac",
                "title": "The Watch Spot Design",
                "description": "Create a visually stunning and eye-catching watch dial design that embodies our brand's essence of sleek aesthetics and modern elegance. Your design should be unique, innovative, and reflective of the latest trends in watch design.",
                "priority": "low",
                "deadline": "2024-05-04T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              },
              {
                "_id": "66311f3141c31316049126cfffc",
                "title": "Research and Analysis",
                "description": "Conduct in-depth research and analysis on the project's topic, gather relevant data, and identify key insights to inform decision-making and project planning.",
                "priority": "medium",
                "deadline": "2024-05-05T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              },
              {
                "_id": "6631f3141c31312316049126cf34c",
                "title": "Concept Development",
                "description": "Brainstorm and develop creative concepts and ideas that align with the project's objectives, considering factors such as target audience, messaging, and visual representation.",
                "priority": "without",
                "deadline": "2024-05-06T17:42:30.636+00:00",
                "columnId": "6631f3841c36049d76cf1ac3",
                "owner": {
                  "_id": "6631f13141c316049126cf1ac"
                }
              }
            ],
            "createdAt": "2024-05-14T21:11:13.172Z",
            "updatedAt": "2024-05-14T21:30:02.106Z"
          }
        }
      },
      "DeleteCardResponse": {
        "type": "object",
        "required": [],
        "properties": {
          "id": {
            "type": "string",
            "description": "card id",
            "example": "6631f3841c36049d76cf1ac3"
          }
        },
        "example": "6631f3841c36049d76cf1ac3"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
